{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AkyLast/AUTOMATIZACAO-Edeconsil/blob/main/FORMATTING%20AUTOMATION%5CMAXIFROTA%5CBOMBA%20EXTERNA%5CBOMBA_EXTERNA.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from datetime import datetime, timedelta"
      ],
      "metadata": {
        "id": "p0tnlb5bfM4X"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "FILE_NAME = \"relatorio-1749125188372.csv\""
      ],
      "metadata": {
        "id": "Yp0mLN-h-qo3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(FILE_NAME, encoding=\"ISO-8859-1\", sep=\";\")\n",
        "\n",
        "def format_tag(tag):\n",
        "  try:\n",
        "    new_tag = tag.upper().replace(\" \", \"\").replace(\" \", \"\").strip()\n",
        "    return new_tag\n",
        "  except:\n",
        "    return tag\n",
        "\n",
        "# Selecionando apenas as colunas necessárias\n",
        "df = df[\n",
        "    [\"DataHora \", \"CentroCusto \", \"Condutor \", \"Cidade \", \"Estado \", \"Prefixo \", \"NomeFantasia \",\n",
        "     \"Quantidade \", \"Valor \", \"ValorUnitario \", \"Servico \", \"UsoPorLitro \", \"Identificacao \",\n",
        "     \"UsoTotal \", \"Uso \", \"Modelo \"]]\n",
        "\n",
        "df.columns = df.columns.str.strip()\n",
        "\n",
        "\n",
        "df[\"DataHora\"] = pd.to_datetime(df[\"DataHora\"])\n",
        "\n",
        "# Mapeamento dos meses\n",
        "month_map = {\n",
        "    1: '(1) - JAN', 2: '(2) - FEV', 3: '(3) - MAR', 4: '(4) - ABR', 5: 'MAI', 6: 'JUN',\n",
        "    7: 'JUL', 8: 'AGO', 9: 'SET', 10: 'OUT', 11: 'NOV', 12: 'DEZ'\n",
        "}\n",
        "\n",
        "df[\"Condutor\"] = df[\"Condutor\"].apply(lambda x: x.upper().strip())\n",
        "df[\"Identificacao\"] = df[\"Identificacao\"].apply(lambda x: x.upper().strip())\n",
        "df[\"Prefixo\"] = df[\"Prefixo\"].apply(lambda x: format_tag(str(x)).upper().strip())\n",
        "\n",
        "def check_value(value):\n",
        "    if pd.isna(value) or value.strip() == \"\":  # Verifica se o valor é NaN\n",
        "        return \"NÃO ESPECIFICADO\"\n",
        "    return value\n",
        "\n",
        "df['Condutor'] = df['Condutor'].apply(check_value)\n",
        "df['Identificacao'] = df['Identificacao'].apply(check_value)\n",
        "df['Prefixo'] = df['Prefixo'].apply(check_value)\n",
        "\n",
        "\n",
        "# Extrair o número do mês e mapear para o nome abreviado\n",
        "df[\"Mês\"] = df[\"DataHora\"].dt.month.map(month_map)\n",
        "\n",
        "df[\"DataHora\"] = df[\"DataHora\"].dt.strftime(\"%d/%m/%Y\")  # Formatar DataHora para o formato BR\n",
        "\n",
        "# Limpeza e conversão de valores numérico (Python reconhece apenas \".\" como valores decimais)\n",
        "df[\"Valor\"] = df[\"Valor\"].str.replace(\",\", \".\").astype(float)\n",
        "df[\"Uso\"] = df[\"Uso\"].astype(str).str.replace(\",\", \".\", regex=False).astype(float)\n",
        "df[\"ValorUnitario\"] = df[\"ValorUnitario\"].str.replace(\",\", \".\").astype(float)\n",
        "df[\"UsoPorLitro\"] = df[\"UsoPorLitro\"].str.replace(\",\", \".\").astype(float)\n",
        "df[\"Quantidade\"] = df[\"Quantidade\"].str.replace(\",\", \".\").astype(float)\n",
        "\n",
        "# Filtrar dados - ARLA\n",
        "df_no_arla = df[df[\"Servico\"] != \"ARLA32\"]\n",
        "df_arla = df[df[\"Servico\"] == \"ARLA32\"]"
      ],
      "metadata": {
        "id": "mtHgWwUCc5y6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Agrupamentos como já definidos\n",
        "motoristas_df = df.groupby([\"Identificacao\", \"Condutor\", \"Prefixo\", \"CentroCusto\", \"NomeFantasia\", \"Cidade\", \"Servico\", \"DataHora\", \"Modelo\", \"UsoTotal\", \"Uso\"]).agg({\n",
        "    'Quantidade': 'sum',\n",
        "    'Valor': 'sum',\n",
        "    \"ValorUnitario\": \"mean\",\n",
        "    \"UsoPorLitro\": lambda x: x.sum() / x.count() if x.count() > 0 else 0\n",
        "}).reset_index()\n",
        "\n",
        "motorista_test = df.groupby([\"Identificacao\", \"CentroCusto\"]).agg({\n",
        "    'Quantidade': lambda x: x[df.loc[x.index, \"Servico\"] != \"ARLA32\"].sum(),\n",
        "    # ^ Somar a quantidade sem considerar o ARLA.\n",
        "    'Valor': 'sum',\n",
        "    # ^ Somar o total sem filtro\n",
        "    \"ValorUnitario\": lambda x: x[df.loc[x.index, \"Servico\"] != \"ARLA32\"].mean() if x[df.loc[x.index, \"Servico\"] != \"ARLA32\"].count() > 0 else 0,\n",
        "    # ^ Trazer o valor unitário sem considerar o ARLA. Se não houver linhas, retornar \"0\"\n",
        "    \"Uso\": lambda x: x[df.loc[x.index, \"Servico\"] != \"ARLA32\"].sum(),\n",
        "    # ^ Total de uso sem o ARLA\n",
        "    \"UsoPorLitro\": lambda x: x[df.loc[x.index, \"Servico\"] != \"ARLA32\"].sum() / x[df.loc[x.index, \"Servico\"] != \"ARLA32\"].count() if x[df.loc[x.index, \"Servico\"] != \"ARLA32\"].count() > 0 else 0\n",
        "    # ^ Somar a o valor e dividir pela quantidade - Filtro: ARLA\n",
        "}).reset_index()\n",
        "\n",
        "\n",
        "# Junta os DataFrames\n",
        "df_motoristas_geral = pd.concat([motoristas_df, motorista_test])\n",
        "df_motoristas_geral = df_motoristas_geral.sort_values(by=[\"Identificacao\", \"CentroCusto\", \"DataHora\"])\n",
        "motorista_test[[\"Condutor\",\"Prefixo\", \"NomeFantasia\", \"Cidade\", \"Servico\", \"DataHora\"]] = [\"TOTAL\", \"TOTAL\", \"TOTAL\", \"TOTAL\", \"TOTAL\", \"TOTAL\"]\n",
        "\n",
        "# Inserir duas linhas em branco após cada grupo de Identificacao\n",
        "output = []\n",
        "\n",
        "header = [\"Identificacao\", \"Condutor\", \"Prefixo\", \"CentroCusto\", \"NomeFantasia\", \"Cidade\", \"Servico\", \"DATA\", \"Modelo\", \"KM\", \"KM RODADO\", \"Quantidade\", \"Valor\", \"ValorUnitario\", \"MÉDIA\"]\n",
        "\n",
        "for _, group in df_motoristas_geral.groupby([ \"CentroCusto\", \"Identificacao\"]):\n",
        "    output.append(group)\n",
        "\n",
        "    # Duas linhas em branco\n",
        "    empty_rows = pd.DataFrame([[\"\"] * len(group.columns)] * 2, columns=group.columns)\n",
        "    output.append(empty_rows)\n",
        "    # output.append(pd.DataFrame([header], columns=group.columns))\n",
        "\n",
        "# Concatena tudo\n",
        "final_output_motoristas_geral = pd.concat(output, ignore_index=True)\n"
      ],
      "metadata": {
        "id": "c9xl4GobvQVR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#final_output_motoristas_geral.head(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 991
        },
        "id": "M0ujYdqgN1Y0",
        "outputId": "077bd776-4069-431e-aeb9-b7ffad913b0a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Identificacao                        Condutor  Prefixo  \\\n",
              "0         ROK4E85       GILMAR ALEXANDRE  DE LIMA    CA119   \n",
              "1         ROK4E85                             NaN      NaN   \n",
              "2                                                            \n",
              "3                                                            \n",
              "4   Identificacao                        Condutor  Prefixo   \n",
              "5         ROC9A59     ANTONIO LUIS SILVA FERREIRA    CA107   \n",
              "6         ROC9A59                             NaN      NaN   \n",
              "7                                                            \n",
              "8                                                            \n",
              "9   Identificacao                        Condutor  Prefixo   \n",
              "10        ROM2G53              JOSE CARDOSO ALVES    CA120   \n",
              "11        ROM2G53                             NaN      NaN   \n",
              "12                                                           \n",
              "13                                                           \n",
              "14  Identificacao                        Condutor  Prefixo   \n",
              "15        RON1I51  ROSINETE COSTA LIMA DOS SANTOS    CA124   \n",
              "16        RON1I51                             NaN      NaN   \n",
              "17                                                           \n",
              "18                                                           \n",
              "19  Identificacao                        Condutor  Prefixo   \n",
              "\n",
              "                             CentroCusto            NomeFantasia  \\\n",
              "0   ALUMAR - OPERACAO NA AREA DE REDUCAO   POSTO NATUREZA TIBIRI   \n",
              "1   ALUMAR - OPERACAO NA AREA DE REDUCAO                     NaN   \n",
              "2                                                                  \n",
              "3                                                                  \n",
              "4                            CentroCusto            NomeFantasia   \n",
              "5                                 ARB 05   POSTO NATUREZA TIBIRI   \n",
              "6                                 ARB 05                     NaN   \n",
              "7                                                                  \n",
              "8                                                                  \n",
              "9                            CentroCusto            NomeFantasia   \n",
              "10                                ARB 05  POSTO NATUREZA ARACAGY   \n",
              "11                                ARB 05                     NaN   \n",
              "12                                                                 \n",
              "13                                                                 \n",
              "14                           CentroCusto            NomeFantasia   \n",
              "15                                ARB 05   POSTO NATUREZA TIBIRI   \n",
              "16                                ARB 05                     NaN   \n",
              "17                                                                 \n",
              "18                                                                 \n",
              "19                           CentroCusto            NomeFantasia   \n",
              "\n",
              "                 Cidade   Servico    DataHora               Modelo  UsoTotal  \\\n",
              "0              Sao Luis  Gasolina  04/06/2025            Mobi Like   60142.0   \n",
              "1                   NaN       NaN         NaN                  NaN       NaN   \n",
              "2                                                                              \n",
              "3                                                                              \n",
              "4                Cidade   Servico        DATA               Modelo        KM   \n",
              "5              Sao Luis  Gasolina  01/06/2025  STRADA ENDURANCE CS  155946.0   \n",
              "6                   NaN       NaN         NaN                  NaN       NaN   \n",
              "7                                                                              \n",
              "8                                                                              \n",
              "9                Cidade   Servico        DATA               Modelo        KM   \n",
              "10  Sao Jose de Ribamar  Gasolina  02/06/2025                 ARGO   87955.0   \n",
              "11                  NaN       NaN         NaN                  NaN       NaN   \n",
              "12                                                                             \n",
              "13                                                                             \n",
              "14               Cidade   Servico        DATA               Modelo        KM   \n",
              "15             Sao Luis  Gasolina  04/06/2025               STRADA   51773.0   \n",
              "16                  NaN       NaN         NaN                  NaN       NaN   \n",
              "17                                                                             \n",
              "18                                                                             \n",
              "19               Cidade   Servico        DATA               Modelo        KM   \n",
              "\n",
              "          Uso  Quantidade   Valor  ValorUnitario UsoPorLitro  \n",
              "0       482.0       38.84  232.65           5.99       12.41  \n",
              "1       482.0       38.84  232.65           5.99       12.41  \n",
              "2                                                             \n",
              "3                                                             \n",
              "4   KM RODADO  Quantidade   Valor  ValorUnitario       MÉDIA  \n",
              "5       406.0        27.8   172.6           6.21        14.6  \n",
              "6       406.0        27.8   172.6           6.21        14.6  \n",
              "7                                                             \n",
              "8                                                             \n",
              "9   KM RODADO  Quantidade   Valor  ValorUnitario       MÉDIA  \n",
              "10      450.0       38.37  229.84           5.99       11.73  \n",
              "11      450.0       38.37  229.84           5.99       11.73  \n",
              "12                                                            \n",
              "13                                                            \n",
              "14  KM RODADO  Quantidade   Valor  ValorUnitario       MÉDIA  \n",
              "15      471.0       41.09  250.24           6.09       11.46  \n",
              "16      471.0       41.09  250.24           6.09       11.46  \n",
              "17                                                            \n",
              "18                                                            \n",
              "19  KM RODADO  Quantidade   Valor  ValorUnitario       MÉDIA  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0d1a041e-1b9b-44b9-9092-ad2c7fe751a3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Identificacao</th>\n",
              "      <th>Condutor</th>\n",
              "      <th>Prefixo</th>\n",
              "      <th>CentroCusto</th>\n",
              "      <th>NomeFantasia</th>\n",
              "      <th>Cidade</th>\n",
              "      <th>Servico</th>\n",
              "      <th>DataHora</th>\n",
              "      <th>Modelo</th>\n",
              "      <th>UsoTotal</th>\n",
              "      <th>Uso</th>\n",
              "      <th>Quantidade</th>\n",
              "      <th>Valor</th>\n",
              "      <th>ValorUnitario</th>\n",
              "      <th>UsoPorLitro</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ROK4E85</td>\n",
              "      <td>GILMAR ALEXANDRE  DE LIMA</td>\n",
              "      <td>CA119</td>\n",
              "      <td>ALUMAR - OPERACAO NA AREA DE REDUCAO</td>\n",
              "      <td>POSTO NATUREZA TIBIRI</td>\n",
              "      <td>Sao Luis</td>\n",
              "      <td>Gasolina</td>\n",
              "      <td>04/06/2025</td>\n",
              "      <td>Mobi Like</td>\n",
              "      <td>60142.0</td>\n",
              "      <td>482.0</td>\n",
              "      <td>38.84</td>\n",
              "      <td>232.65</td>\n",
              "      <td>5.99</td>\n",
              "      <td>12.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>ROK4E85</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ALUMAR - OPERACAO NA AREA DE REDUCAO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>482.0</td>\n",
              "      <td>38.84</td>\n",
              "      <td>232.65</td>\n",
              "      <td>5.99</td>\n",
              "      <td>12.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Identificacao</td>\n",
              "      <td>Condutor</td>\n",
              "      <td>Prefixo</td>\n",
              "      <td>CentroCusto</td>\n",
              "      <td>NomeFantasia</td>\n",
              "      <td>Cidade</td>\n",
              "      <td>Servico</td>\n",
              "      <td>DATA</td>\n",
              "      <td>Modelo</td>\n",
              "      <td>KM</td>\n",
              "      <td>KM RODADO</td>\n",
              "      <td>Quantidade</td>\n",
              "      <td>Valor</td>\n",
              "      <td>ValorUnitario</td>\n",
              "      <td>MÉDIA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>ROC9A59</td>\n",
              "      <td>ANTONIO LUIS SILVA FERREIRA</td>\n",
              "      <td>CA107</td>\n",
              "      <td>ARB 05</td>\n",
              "      <td>POSTO NATUREZA TIBIRI</td>\n",
              "      <td>Sao Luis</td>\n",
              "      <td>Gasolina</td>\n",
              "      <td>01/06/2025</td>\n",
              "      <td>STRADA ENDURANCE CS</td>\n",
              "      <td>155946.0</td>\n",
              "      <td>406.0</td>\n",
              "      <td>27.8</td>\n",
              "      <td>172.6</td>\n",
              "      <td>6.21</td>\n",
              "      <td>14.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>ROC9A59</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ARB 05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>406.0</td>\n",
              "      <td>27.8</td>\n",
              "      <td>172.6</td>\n",
              "      <td>6.21</td>\n",
              "      <td>14.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Identificacao</td>\n",
              "      <td>Condutor</td>\n",
              "      <td>Prefixo</td>\n",
              "      <td>CentroCusto</td>\n",
              "      <td>NomeFantasia</td>\n",
              "      <td>Cidade</td>\n",
              "      <td>Servico</td>\n",
              "      <td>DATA</td>\n",
              "      <td>Modelo</td>\n",
              "      <td>KM</td>\n",
              "      <td>KM RODADO</td>\n",
              "      <td>Quantidade</td>\n",
              "      <td>Valor</td>\n",
              "      <td>ValorUnitario</td>\n",
              "      <td>MÉDIA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>ROM2G53</td>\n",
              "      <td>JOSE CARDOSO ALVES</td>\n",
              "      <td>CA120</td>\n",
              "      <td>ARB 05</td>\n",
              "      <td>POSTO NATUREZA ARACAGY</td>\n",
              "      <td>Sao Jose de Ribamar</td>\n",
              "      <td>Gasolina</td>\n",
              "      <td>02/06/2025</td>\n",
              "      <td>ARGO</td>\n",
              "      <td>87955.0</td>\n",
              "      <td>450.0</td>\n",
              "      <td>38.37</td>\n",
              "      <td>229.84</td>\n",
              "      <td>5.99</td>\n",
              "      <td>11.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>ROM2G53</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ARB 05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>450.0</td>\n",
              "      <td>38.37</td>\n",
              "      <td>229.84</td>\n",
              "      <td>5.99</td>\n",
              "      <td>11.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Identificacao</td>\n",
              "      <td>Condutor</td>\n",
              "      <td>Prefixo</td>\n",
              "      <td>CentroCusto</td>\n",
              "      <td>NomeFantasia</td>\n",
              "      <td>Cidade</td>\n",
              "      <td>Servico</td>\n",
              "      <td>DATA</td>\n",
              "      <td>Modelo</td>\n",
              "      <td>KM</td>\n",
              "      <td>KM RODADO</td>\n",
              "      <td>Quantidade</td>\n",
              "      <td>Valor</td>\n",
              "      <td>ValorUnitario</td>\n",
              "      <td>MÉDIA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>RON1I51</td>\n",
              "      <td>ROSINETE COSTA LIMA DOS SANTOS</td>\n",
              "      <td>CA124</td>\n",
              "      <td>ARB 05</td>\n",
              "      <td>POSTO NATUREZA TIBIRI</td>\n",
              "      <td>Sao Luis</td>\n",
              "      <td>Gasolina</td>\n",
              "      <td>04/06/2025</td>\n",
              "      <td>STRADA</td>\n",
              "      <td>51773.0</td>\n",
              "      <td>471.0</td>\n",
              "      <td>41.09</td>\n",
              "      <td>250.24</td>\n",
              "      <td>6.09</td>\n",
              "      <td>11.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>RON1I51</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ARB 05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>471.0</td>\n",
              "      <td>41.09</td>\n",
              "      <td>250.24</td>\n",
              "      <td>6.09</td>\n",
              "      <td>11.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Identificacao</td>\n",
              "      <td>Condutor</td>\n",
              "      <td>Prefixo</td>\n",
              "      <td>CentroCusto</td>\n",
              "      <td>NomeFantasia</td>\n",
              "      <td>Cidade</td>\n",
              "      <td>Servico</td>\n",
              "      <td>DATA</td>\n",
              "      <td>Modelo</td>\n",
              "      <td>KM</td>\n",
              "      <td>KM RODADO</td>\n",
              "      <td>Quantidade</td>\n",
              "      <td>Valor</td>\n",
              "      <td>ValorUnitario</td>\n",
              "      <td>MÉDIA</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d1a041e-1b9b-44b9-9092-ad2c7fe751a3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0d1a041e-1b9b-44b9-9092-ad2c7fe751a3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0d1a041e-1b9b-44b9-9092-ad2c7fe751a3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-62bb25fc-a1c9-49a9-a68e-4232f39d7479\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62bb25fc-a1c9-49a9-a68e-4232f39d7479')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-62bb25fc-a1c9-49a9-a68e-4232f39d7479 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "final_output_motoristas_geral",
              "summary": "{\n  \"name\": \"final_output_motoristas_geral\",\n  \"rows\": 484,\n  \"fields\": [\n    {\n      \"column\": \"Identificacao\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"NNF4193\",\n          \"NNE8076\",\n          \"RNK0C64\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condutor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"MAGNO MORAES\",\n          \"DANIEL CARNEIRO DE OLIVEIRA\",\n          \"LUIS SELMO DE ANDRADE SANTIAGO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Prefixo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"CA120\",\n          \"CA137\",\n          \"CA154\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CentroCusto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"ALUMAR - OPERACAO NA AREA DE REDUCAO\",\n          \"REGIONAL SAO LUIS\",\n          \"N\\u00c3O ESPECIFICADO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NomeFantasia\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 43,\n        \"samples\": [\n          \"001 - FROTA INTERNA NATUREZA\",\n          \"POSTO REGINA\",\n          \"POSTO PALOMA LAGOA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cidade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"Sao Luis\",\n          \"Imperatriz\",\n          \"Piripiri\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Servico\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Gasolina\",\n          \"\",\n          \"ARLA32\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DataHora\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"04/06/2025\",\n          \"\",\n          \"03/06/2025\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 54,\n        \"samples\": [\n          \"STRALIS 450-S33T TA 2p (diesel)(E5)\",\n          \"MASTER\",\n          \"SPIN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"UsoTotal\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 115,\n        \"samples\": [\n          498775.0,\n          87955.0,\n          124711.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Uso\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 126,\n        \"samples\": [\n          260501.0,\n          519.0,\n          343.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantidade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 127,\n        \"samples\": [\n          386.0,\n          44.38,\n          39.51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Valor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 133,\n        \"samples\": [\n          1590.36,\n          3520.68,\n          3870.6800000000003\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ValorUnitario\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          5.64,\n          5.885,\n          5.785\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"UsoPorLitro\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 129,\n        \"samples\": [\n          1.35,\n          10.49,\n          13.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "header_data = [\"Identificacao\", \"Condutor\", \"Prefixo\", \"CentroCusto\", \"NomeFantasia\", \"Cidade\", \"Servico\", \"DATA\", \"Modelo\", \"KM\", \"KM RODADO\", \"Quantidade\", \"Valor\", \"ValorUnitario\", \"MÉDIA\"]\n",
        "\n",
        "# Variáveis para controle\n",
        "output = []\n",
        "skip_next = False  # Flag para saber quando ignorar a próxima linha (quando já adicionamos a linha de dados)\n",
        "\n",
        "# limiar para saber se já está próximo para adicionar a próximo header\n",
        "limiar = 0\n",
        "\n",
        "for i in range(len(final_output_motoristas_geral)):\n",
        "    # Verifica se a linha atual e a próxima linha estão em branco. Não a necessidade de verificar todas as colunas\n",
        "    if i < len(final_output_motoristas_geral) - 1 and final_output_motoristas_geral.iloc[i, 0] == \"\" and final_output_motoristas_geral.iloc[i + 1, 0] == \"\":\n",
        "        # Quando encontrar duas linhas em branco consecutivas, marca a flag para adicionar uma linha de dados\n",
        "        skip_next = True\n",
        "        limiar = 2\n",
        "\n",
        "    # Se a flag for verdadeira (ou seja, encontramos duas linhas em branco)\n",
        "    if skip_next:\n",
        "      limiar -= 1\n",
        "      if limiar < 0:\n",
        "        # Adiciona a linha com dados e a header\n",
        "        output.append(pd.DataFrame([header_data], columns=final_output_motoristas_geral.columns))\n",
        "        skip_next = False\n",
        "\n",
        "    # Adiciona a linha atual ao output\n",
        "    output.append(final_output_motoristas_geral.iloc[i:i+1])\n",
        "\n",
        "# Concatenar o resultado final\n",
        "final_output_motoristas_geral_updated = pd.concat(output, ignore_index=True)\n"
      ],
      "metadata": {
        "id": "YkJgAQGadhKu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 556
        },
        "outputId": "67c0c97a-3adc-4fe6-ad45-9bbddc054766"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Identificacao                     Condutor  Prefixo  \\\n",
              "0        ROK4E85    GILMAR ALEXANDRE  DE LIMA    CA119   \n",
              "1        ROK4E85                          NaN      NaN   \n",
              "2                                                        \n",
              "3                                                        \n",
              "4  Identificacao                     Condutor  Prefixo   \n",
              "5        ROC9A59  ANTONIO LUIS SILVA FERREIRA    CA107   \n",
              "6        ROC9A59                          NaN      NaN   \n",
              "7                                                        \n",
              "8                                                        \n",
              "9  Identificacao                     Condutor  Prefixo   \n",
              "\n",
              "                            CentroCusto           NomeFantasia    Cidade  \\\n",
              "0  ALUMAR - OPERACAO NA AREA DE REDUCAO  POSTO NATUREZA TIBIRI  Sao Luis   \n",
              "1  ALUMAR - OPERACAO NA AREA DE REDUCAO                    NaN       NaN   \n",
              "2                                                                          \n",
              "3                                                                          \n",
              "4                           CentroCusto           NomeFantasia    Cidade   \n",
              "5                                ARB 05  POSTO NATUREZA TIBIRI  Sao Luis   \n",
              "6                                ARB 05                    NaN       NaN   \n",
              "7                                                                          \n",
              "8                                                                          \n",
              "9                           CentroCusto           NomeFantasia    Cidade   \n",
              "\n",
              "    Servico    DataHora               Modelo  UsoTotal        Uso  Quantidade  \\\n",
              "0  Gasolina  04/06/2025            Mobi Like   60142.0      482.0       38.84   \n",
              "1       NaN         NaN                  NaN       NaN      482.0       38.84   \n",
              "2                                                                               \n",
              "3                                                                               \n",
              "4   Servico        DATA               Modelo        KM  KM RODADO  Quantidade   \n",
              "5  Gasolina  01/06/2025  STRADA ENDURANCE CS  155946.0      406.0        27.8   \n",
              "6       NaN         NaN                  NaN       NaN      406.0        27.8   \n",
              "7                                                                               \n",
              "8                                                                               \n",
              "9   Servico        DATA               Modelo        KM  KM RODADO  Quantidade   \n",
              "\n",
              "    Valor  ValorUnitario UsoPorLitro  \n",
              "0  232.65           5.99       12.41  \n",
              "1  232.65           5.99       12.41  \n",
              "2                                     \n",
              "3                                     \n",
              "4   Valor  ValorUnitario       MÉDIA  \n",
              "5   172.6           6.21        14.6  \n",
              "6   172.6           6.21        14.6  \n",
              "7                                     \n",
              "8                                     \n",
              "9   Valor  ValorUnitario       MÉDIA  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-733d8954-4190-4480-9885-4d9f3bd4937d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Identificacao</th>\n",
              "      <th>Condutor</th>\n",
              "      <th>Prefixo</th>\n",
              "      <th>CentroCusto</th>\n",
              "      <th>NomeFantasia</th>\n",
              "      <th>Cidade</th>\n",
              "      <th>Servico</th>\n",
              "      <th>DataHora</th>\n",
              "      <th>Modelo</th>\n",
              "      <th>UsoTotal</th>\n",
              "      <th>Uso</th>\n",
              "      <th>Quantidade</th>\n",
              "      <th>Valor</th>\n",
              "      <th>ValorUnitario</th>\n",
              "      <th>UsoPorLitro</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ROK4E85</td>\n",
              "      <td>GILMAR ALEXANDRE  DE LIMA</td>\n",
              "      <td>CA119</td>\n",
              "      <td>ALUMAR - OPERACAO NA AREA DE REDUCAO</td>\n",
              "      <td>POSTO NATUREZA TIBIRI</td>\n",
              "      <td>Sao Luis</td>\n",
              "      <td>Gasolina</td>\n",
              "      <td>04/06/2025</td>\n",
              "      <td>Mobi Like</td>\n",
              "      <td>60142.0</td>\n",
              "      <td>482.0</td>\n",
              "      <td>38.84</td>\n",
              "      <td>232.65</td>\n",
              "      <td>5.99</td>\n",
              "      <td>12.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>ROK4E85</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ALUMAR - OPERACAO NA AREA DE REDUCAO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>482.0</td>\n",
              "      <td>38.84</td>\n",
              "      <td>232.65</td>\n",
              "      <td>5.99</td>\n",
              "      <td>12.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Identificacao</td>\n",
              "      <td>Condutor</td>\n",
              "      <td>Prefixo</td>\n",
              "      <td>CentroCusto</td>\n",
              "      <td>NomeFantasia</td>\n",
              "      <td>Cidade</td>\n",
              "      <td>Servico</td>\n",
              "      <td>DATA</td>\n",
              "      <td>Modelo</td>\n",
              "      <td>KM</td>\n",
              "      <td>KM RODADO</td>\n",
              "      <td>Quantidade</td>\n",
              "      <td>Valor</td>\n",
              "      <td>ValorUnitario</td>\n",
              "      <td>MÉDIA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>ROC9A59</td>\n",
              "      <td>ANTONIO LUIS SILVA FERREIRA</td>\n",
              "      <td>CA107</td>\n",
              "      <td>ARB 05</td>\n",
              "      <td>POSTO NATUREZA TIBIRI</td>\n",
              "      <td>Sao Luis</td>\n",
              "      <td>Gasolina</td>\n",
              "      <td>01/06/2025</td>\n",
              "      <td>STRADA ENDURANCE CS</td>\n",
              "      <td>155946.0</td>\n",
              "      <td>406.0</td>\n",
              "      <td>27.8</td>\n",
              "      <td>172.6</td>\n",
              "      <td>6.21</td>\n",
              "      <td>14.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>ROC9A59</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ARB 05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>406.0</td>\n",
              "      <td>27.8</td>\n",
              "      <td>172.6</td>\n",
              "      <td>6.21</td>\n",
              "      <td>14.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Identificacao</td>\n",
              "      <td>Condutor</td>\n",
              "      <td>Prefixo</td>\n",
              "      <td>CentroCusto</td>\n",
              "      <td>NomeFantasia</td>\n",
              "      <td>Cidade</td>\n",
              "      <td>Servico</td>\n",
              "      <td>DATA</td>\n",
              "      <td>Modelo</td>\n",
              "      <td>KM</td>\n",
              "      <td>KM RODADO</td>\n",
              "      <td>Quantidade</td>\n",
              "      <td>Valor</td>\n",
              "      <td>ValorUnitario</td>\n",
              "      <td>MÉDIA</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-733d8954-4190-4480-9885-4d9f3bd4937d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-733d8954-4190-4480-9885-4d9f3bd4937d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-733d8954-4190-4480-9885-4d9f3bd4937d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-e7088c5f-2dd5-46ed-86bd-1dc00ce475bc\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7088c5f-2dd5-46ed-86bd-1dc00ce475bc')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-e7088c5f-2dd5-46ed-86bd-1dc00ce475bc button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "final_output_motoristas_geral_updated",
              "summary": "{\n  \"name\": \"final_output_motoristas_geral_updated\",\n  \"rows\": 483,\n  \"fields\": [\n    {\n      \"column\": \"Identificacao\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"NNF4193\",\n          \"NNE8076\",\n          \"RNK0C64\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condutor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"MAGNO MORAES\",\n          \"DANIEL CARNEIRO DE OLIVEIRA\",\n          \"LUIS SELMO DE ANDRADE SANTIAGO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Prefixo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"CA120\",\n          \"CA137\",\n          \"CA154\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CentroCusto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"ALUMAR - OPERACAO NA AREA DE REDUCAO\",\n          \"REGIONAL SAO LUIS\",\n          \"N\\u00c3O ESPECIFICADO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NomeFantasia\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 43,\n        \"samples\": [\n          \"001 - FROTA INTERNA NATUREZA\",\n          \"POSTO REGINA\",\n          \"POSTO PALOMA LAGOA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cidade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"Sao Luis\",\n          \"Imperatriz\",\n          \"Piripiri\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Servico\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Gasolina\",\n          \"\",\n          \"ARLA32\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DataHora\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"04/06/2025\",\n          \"\",\n          \"03/06/2025\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 54,\n        \"samples\": [\n          \"STRALIS 450-S33T TA 2p (diesel)(E5)\",\n          \"MASTER\",\n          \"SPIN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"UsoTotal\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 115,\n        \"samples\": [\n          498775.0,\n          87955.0,\n          124711.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Uso\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 126,\n        \"samples\": [\n          260501.0,\n          519.0,\n          343.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantidade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 127,\n        \"samples\": [\n          386.0,\n          44.38,\n          39.51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Valor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 133,\n        \"samples\": [\n          1590.36,\n          3520.68,\n          3870.6800000000003\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ValorUnitario\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          5.64,\n          5.885,\n          5.785\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"UsoPorLitro\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 129,\n        \"samples\": [\n          1.35,\n          10.49,\n          13.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "hoje = datetime.today()\n",
        "\n",
        "dia_anterior = hoje - timedelta(days=1)\n",
        "\n",
        "dia_anterior_formatado = dia_anterior.strftime(\"%d-%m\")\n",
        "\n",
        "print(dia_anterior_formatado)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RqFdtqguAbXU",
        "outputId": "899c04fe-9fc6-4162-ed15-fc0bbfe02a20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "04-06\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "final_output_motoristas_geral_updated.to_excel(f\"Relatório Bomba Externa {dia_anterior_formatado}.xlsx\", index = False)"
      ],
      "metadata": {
        "id": "ZY4KqT0mCyCa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.sort_values(by=\"CentroCusto\")\n",
        "\n",
        "\n",
        "centro = df.groupby(\"CentroCusto\").agg(\n",
        "    Quantidade_sem_arla = (\"Quantidade\", lambda x: x[df.loc[x.index, \"Servico\"] != \"ARLA32\"].sum()),\n",
        "    Valor_total = (\"Valor\", \"sum\")\n",
        ").reset_index()\n",
        "\n",
        "# Renomear coluna para \"Quantidade\" se desejar\n",
        "centro = centro.rename(columns={\"Quantidade_sem_arla\": \"Quantidade\", \"Valor_total\": \"Valor\"})\n",
        "centro = centro.sort_values(by=\"Valor\", ascending= False)\n"
      ],
      "metadata": {
        "id": "OB13FKAlMTz8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "centro.to_excel(f\"Centro Custo {dia_anterior_formatado}.xlsx\")"
      ],
      "metadata": {
        "id": "n3PdkKc9Nd96"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Verificar se todos os totais estão correspondentes"
      ],
      "metadata": {
        "id": "K1iLQHTIOeJ1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(centro[\"Valor\"].sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p9zdonUt-NMK",
        "outputId": "7f35e1da-30d3-40ce-d9b0-a3d3f83526ea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "150212.41\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df[\"Valor\"].sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "42sueFYG-V66",
        "outputId": "7171cf57-6736-4a73-f490-6ca37476b444"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "150212.41\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(motorista_test[\"Valor\"].sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WRAcXgNY-mSc",
        "outputId": "6f8ce4f2-5153-40cc-ba23-a193992cb056"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "150212.41\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
